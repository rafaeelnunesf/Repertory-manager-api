// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  name     String
  password String
  teams    TeamUser[]

  @@map("users")
}

model TeamUser {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  team   Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId Int
  main   Boolean @default(false)

  @@id([userId, teamId])
}

model Team {
  id          Int         @id @default(autoincrement())
  name        String
  users       TeamUser[]
  repertoires Repertory[]

  @@map("teams")
}

model Repertory {
  id     Int             @id @default(autoincrement())
  name   String
  team   Team            @relation(fields: [teamId], references: [id])
  teamId Int
  songs  RepertorySong[]

  @@map("repertoires")
}

model RepertorySong {
  repertoires Repertory @relation(fields: [repertoryId], references: [id])
  repertoryId Int

  song   Song @relation(fields: [songId], references: [id])
  songId Int

  lastTimePlayed DateTime
  timesPlayed    Int
  rating         Int

  @@id([repertoryId, songId])
}

model Song {
  id     Int    @id @default(autoincrement())
  name   String
  author String
  tab    String
  lyrics String

  repertoires RepertorySong[]
}
